import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;

public class Main {

//    public static String[][] GamePole =  {{" ","1","2","3"},{"a"," "," "," "},{"b"," "," "," "},{"c"," "," "," "}};

    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        System.out.println("Приветствую вас на экспериментальной площадке \"Будущий супер программист\"!." +
                        "\nХотите ли сыграть в игру \"Крестики-нолики\"?");
        Game game = new Game();
        game.Begin();
        game.Playing();






























        //printGamePole();
//      System.out.println("Введите в консоль координаты для постановки крестика");
        //game.readConsole();
        //printGamePole();

        //может отдельно отвести приветственное слово в начале игры
        //нужен отдельный метод отрисовки поля после каждого введённого крестика-нолика
        //проверка на завершение игры while (заполнено все поле/построен ряд из 3 одинаковых символов)
        //


    }

    public void superMessage(){
        System.out.println("Поздравляем ! Вы выиграли эту игру! Хотите сыграть ещё раз?");
    }

//    public static void printGamePole(){
//        for (int i = 0; i < GamePole.length; i++) {  //идём по строкам
//            for (int j = 0; j < GamePole[i].length; j++) {//идём по столбцам
//                System.out.print(" " + GamePole[i][j] + " "); //вывод элемента
//            }
//            System.out.println();//перенос строки ради визуального сохранения табличной формы
//        }

    }









/**


как можно сделать так, чтобы не писать ридер в двух местах
Можно ли создавать многомерные динамические массивы в Java???
ArrayList<String> Pole = new ArrayList<>();

***************************************************************************************************************************************************************
Integer [][] GamePole = {{0,1,2,3},{0,1,2,3},{0,1,2,3},{0,1,2,3}};
{"_","_","_","_","_","_","_","_"}  "\u27FC"
{"-","-","-","-","-","-","-","-"}  "\uD834\uDD16"
/*String[][] GamePole =  {{" "," |","1","|","2","|","3","|"},{"\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16"},
                        {"a"," |"," ","|"," ","|"," ","|"},{"\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16"},
                        {"b"," |"," ","|"," ","|"," ","|"},{"\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16",},
                        {"c"," |"," ","|"," ","|"," ","|"},{"\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16","\uD834\uDD16"}};
Если брать за основу строки(чтобы не заморачиваться с символами), можно играться с Unicode и настроить поле по "красоте". Из всего что искал - вариант выше самый удобоваримый
Логика возможно усложнится, но суть останется прежней. в целом для большей простоты оставлю без линий


**/
